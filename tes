(defglobal ?*cnt* = 0)
(defglobal ?*garcnt* = 5)
(defglobal ?*nogarcnt* = 5)
(defglobal ?*idxx* = -1)
(defglobal ?*modifidx* = -1)
(defglobal ?*deleteidx* = -1)

(
    deftemplate garage
    (slot tipe)
    (slot room)
    (slot price)
    (slot loc)
    (slot tot)
    (slot rate (default 0))
    (slot idx)
    )

(
    deftemplate nogarage
    (slot tipe)
    (slot room)
    (slot price)
    (slot loc)
    (slot rate (default 0))
    (slot idx)
)

(
    deftemplate query
    (slot nama)
    (slot gender)
    (slot gar)
    (slot income)
    (slot loc)
    (slot type)
    (slot car (default 0))
    )

(
    deftemplate modiftemp
    (slot tipe)
    (slot room)
    (slot price)
    (slot loc)
    (slot tot (default 0))
    )

(
    deffacts init
    (garage (tipe "Light House") (room 4) (price 7500) (loc "West Jakarta") (tot 1)(idx (bind ?*idxx* (++ ?*idxx* ))))
    (garage (tipe "Skyscraper") (room 5) (price 17500) (loc "South Jakarta") (tot 3)(idx (bind ?*idxx* (++ ?*idxx* ))))
    (garage (tipe "Cottage") (room 3) (price 4500) (loc "North Jakarta") (tot 1)(idx (bind ?*idxx* (++ ?*idxx* ))))
    (garage (tipe "Light House") (room 2) (price 7500) (loc "South Jakarta") (tot 2)(idx (bind ?*idxx* (++ ?*idxx* ))))
    (garage (tipe "Cottage") (room 3) (price 30000) (loc "West Jakarta") (tot 2)(idx (bind ?*idxx* (++ ?*idxx* ))))
    (nogarage (tipe "Light House") (room 3) (price 10000) (loc "West Jakarta")(idx (bind ?*idxx* (++ ?*idxx* ))))
    (nogarage (tipe "Cottage") (room 2) (price 5000) (loc "North Jakarta")(idx (bind ?*idxx* (++ ?*idxx* ))))
    (nogarage (tipe "Skyscraper") (room 4) (price 100000) (loc "West Jakarta")(idx (bind ?*idxx* (++ ?*idxx* ))))
    (nogarage (tipe "Light House") (room 3) (price 25000) (loc "South Jakarta")(idx (bind ?*idxx* (++ ?*idxx* ))))
    (nogarage (tipe "Cottage") (room 3) (price 7500) (loc "South Jakarta")(idx (bind ?*idxx* (++ ?*idxx* ))))
    )

(
    deffunction sp(?word ?maxim)
    (return (- ?maxim  (str-length ?word)))
    )

(
    deffunction iniPilihan()
    (printout t "1. House with Garage" crlf)
    (printout t "2. House without Garage" crlf)
    (printout t ">> Choose [1..2 | 0 back to main menu]: ")
    
    (bind ?inp (read)) 
    (return ?inp)
    )

(
    deffunction cekoption(?option)
    (return (or (eq ?option 0) (or (eq ?option 1) (eq ?option 2)) ))
    )

(
    deffunction tempGarage()
    (printout t "=========================================================================================" crlf)
    (printout t "| No. | Type           | Room         | Price        | Location          | Garage       |" crlf)
    (printout t "=========================================================================================" crlf)
    )

(
    deffunction tempNoGarage()
    (printout t "==========================================================================" crlf)
    (printout t "| No. | Type           | Room         | Price        | Location          |" crlf)
    (printout t "==========================================================================" crlf)
    )

(
    deffunction cekLoc(?loc)
    (
        if(eq ?loc "West Jakarta") then
        (return TRUE)
        elif(eq  ?loc "North Jakarta" ) then
        (return TRUE)
        elif(eq ?loc "South Jakarta")then
        (return TRUE)
        else
        (return FALSE)
        )
    )

(
    defrule printGarage
    (showGarage)
    ?no <- (garage (tipe ?a) (room ?b) (price ?c) (loc ?d) (tot ?e))
    =>
    (++ ?*cnt*)
    (printout t ?*cnt*    " || " ?a " || " ?b " || " ?c " || " ?d " || " ?e crlf)
    )

(
    defrule deletePrintGarage
    ?no <- (showGarage)
    =>
    (retract ?no)
    )

(
    defrule printNoGarage
    (showNoGarage)
    (nogarage (tipe ?a) (room ?b) (price ?c) (loc ?d))
    =>
    (++ ?*cnt*)
    (printout t ?*cnt* " || " ?a " || " ?b " || " ?c " || " ?d  crlf)
    )

(
    defrule deletePrintNoGarage
    ?no <- (showNoGarage)
    =>
    (retract ?no)
    )

(
    defrule calcgarage
    (calcgar)
    (query (nama ?nama)(gender ?gender)(gar ?gar)(income ?income)(loc ?loc)(type ?tipe)(car ?car))
    ?idx <- (garage (tipe ?a) (room ?b) (price ?c) (loc ?d) (tot ?e) (rate ?rate))
    =>
    (bind ?rate 100)
    (
        if(> ?car ?e) then
        (bind ?rate (- ?rate 10))
        )
    (
        if(< ?income ?c) then
        (bind ?rate (- ?rate 10))
        )
    (
        if(neq ?loc ?d) then
        (bind ?rate (- ?rate 10))
        )
    (
        if(neq ?tipe ?a) then
        (bind ?rate (- ?rate 5))
        )
    (modify ?idx (rate ?rate))
    )

(
    defrule deletecalcgarage
    ?no <- (calcgar)
    =>
    (retract ?no)
    )


(
    defrule calcnogarage
    (calcnogar)
    (query (nama ?nama)(gender ?gender)(income ?income)(loc ?loc)(type ?tipe))
    ?idx <- (nogarage (tipe ?a) (room ?b) (price ?c) (loc ?d) (rate ?rate))
    =>
    (bind ?rate 100)
    ( 
        if(< ?income ?c) then
        (bind ?rate (- ?rate 10))
        )
    (
        if(neq ?loc ?d) then
        (bind ?rate (- ?rate 10))
        )
    (
        if(neq ?tipe ?a) then
        (bind ?rate (- ?rate 5))
        )
    (modify ?idx (rate ?rate))
)

(
    defrule deletecalcnogarage
    ?no <- (calcnogar)
    =>
    (retract ?no)
    )

(
    defrule modifgarage
    ?retr <- (modifgar)
    ?tempone <- (garage (tipe ?a) (room ?b) (price ?c) (loc ?d) (tot ?e) (rate ?rate))
    ?temptwo <- (modiftemp (tipe ?tipe)(room ?room)(price ?price)(loc ?loc)(tot ?tot))
    =>
    (
        if (eq (- ?*modifidx* 1) ?*cnt*) then
        (modify ?tempone (tipe ?tipe) (room ?room) (price ?price) (loc ?loc) (tot ?gar)(rate ?rate))
        (retract ?temptwo)
        (retract ?retr)
        )
    (++ ?*cnt*)
    )

(
    defrule modifnogarage
    ?retr <- (modifnogar)
    ?tempone <- (nogarage (tipe ?a) (room ?b) (price ?c) (loc ?d) (rate ?rate))
    ?temptwo <- (modiftemp (tipe ?tipe)(room ?room)(price ?price)(loc ?loc))
    =>
    (
        if (eq (- ?*modifidx* 1) ?*cnt*) then
        (modify ?tempone (tipe ?tipe) (room ?room) (price ?price) (loc ?loc)(rate ?rate))
        (retract ?temptwo)
        (retract ?retr)
        )
    (++ ?*cnt*)
    )

(
    defrule deletegarage
    ?retr <- (deletegar)
    ?tempone <- (garage (tipe ?a) (room ?b) (price ?c) (loc ?d) (tot ?e) (rate ?rate))
    =>
    (
        if (eq (- ?*deleteidx* 1) ?*cnt*) then
        (retract ?tempone)
        (retract ?retr)
        )
    (++ ?*cnt*)
    )

(
    defrule deletenogarage
    ?retr <- (deletenogar)
    ?tempone <- (nogarage (tipe ?a) (room ?b) (price ?c) (loc ?d) (rate ?rate))
    =>
    (
        if (eq (- ?*deleteidx* 1) ?*cnt*) then
        (retract ?tempone)
        (retract ?retr)
        )
    (++ ?*cnt*)
    )

(
    defquery querygar
    (garage (tipe ?type) (room ?roomNumber) (price ?price) (loc ?location) (tot ?number) (rate ?match-rate&:(< 0 ?match-rate)))
    )

(
    defquery querynogar
    (nogarage (tipe ?type) (room ?roomNumber) (price ?price) (loc ?location) (rate ?match-rate&:(< 0 ?match-rate)))
)

(
    defquery queryquery
    (query (nama ?name) (gender ?gender) (gar ?interest) (loc ?location) (income ?income) (type ?type) (car ?carCount))
)

(
	defrule deletequeryy
    ?idx <- (query (nama ?name) (gender ?gender) (gar ?interest) (loc ?location) (income ?income) (type ?type) (car ?carCount))
    ?idxx <- (deletequery)
    => 
    (retract ?idxx)
    (retract ?idx)
)

(reset)

(while TRUE
    (while TRUE
        (printout t "================" crlf)
        (printout t "|| BELI RUMAH ||" crlf)
        (printout t "================"crlf)
        (printout t "1. View House" crlf)
        (printout t "2. Add a New House" crlf)
        (printout t "3. Update House Detail" crlf)
        (printout t "4. Delete House" crlf)
        (printout t "5. Search Match" crlf)
        (printout t "6. Exit" crlf)
        (printout t ">>input[1-6]: ")
        (bind ?input (read))
        (
            if (and (< ?input 7) (> ?input 0) ) then
            (break)
            )
     )
    
    (
        if (eq ?input 1) then
        ( while TRUE
            (printout t "List of house to be viewed" crlf)
            (printout t "=============================" crlf)
            (bind ?x (iniPilihan))
            (
                if(cekoption ?x ) then
                (break)
                )
            )
        (
            if(eq ?x 0) then
            
            elif(eq ?x 1) then
            (tempGarage)
            (assert (showGarage))
            (run)
            
            elif(eq ?x 2) then
            (tempNoGarage)
            (assert (showNoGarage))
            (run)
            )
        elif (eq ?input 2) then
        ( while TRUE
            (printout t "Type of houses to be added" crlf)
            (printout t "=============================" crlf)
            (bind ?x (iniPilihan))
            (
                if(cekoption ?x ) then
                (break)
                )
            )
        
        (
            if(eq ?x 0) then
            
            elif(eq ?x 1) then
            (while TRUE
                (printout t "Input house type[Cottage | Light House | Skyscraper](CASE-SENSITIVE): ")
                (bind ?tipe (readline))
                (
                    if(eq ?tipe "Cottage") then
                    (break)
                    elif(eq ?tipe "Light House") then
                    (break)
                    elif(eq ?tipe "Skyscraper") then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input room number [1 - 5] : ")
                (bind ?room (read))
                (
                    if(and (> ?room 0) (< ?room 6)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input house price [1000 - 500000] : ")
                (bind ?price (read))
                (
                    if(and (> ?price 999) (< ?price 500001)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input location [West Jakarta | North Jakarta | South Jakarta](CASE-SENSITIVE): ")
                (bind ?loc (readline))
                (
                    if(cekLoc ?loc) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input garage number [1 - 5] : ")
                (bind ?gar (read))
                (
                    if(and (> ?gar 0) (< ?gar 6)) then
                    (break)
                    )
                )
            (assert (garage (tipe ?tipe) (room ?room) (price ?price) (loc ?loc) (tot ?gar)(idx (bind ?*idxx* (++ ?*idxx* )))))
            (++ ?*garcnt*)
            elif(eq ?x 2) then
            (while TRUE
                (printout t "Input house type[Cottage | Light House | Skyscraper](CASE-SENSITIVE): ")
                (bind ?tipe (readline))
                (
                    if(eq ?tipe "Cottage") then
                    (break)
                    elif(eq ?tipe "Light House") then
                    (break)
                    elif(eq ?tipe "Skyscraper") then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input room number [1 - 5] : ")
                (bind ?room (read))
                (
                    if(and (> ?room 0) (< ?room 6)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input house price [1000 - 500000] : ")
                (bind ?price (read))
                (
                    if(and (> ?price 999) (< ?price 500001)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input location [West Jakarta | North Jakarta | South Jakarta](CASE-SENSITIVE): ")
                (bind ?loc (readline))
                (
                    if(cekLoc ?loc) then
                    (break)
                    )
                )
            (assert (garage (tipe ?tipe) (room ?room) (price ?price) (loc ?loc)(idx (bind ?*idxx* (++ ?*idxx* )))))
            (++ ?*nogarcnt*)
            )
        elif (eq ?input 3) then
        ( while TRUE
            (printout t "Types of houses to be updated" crlf)
            (printout t "=============================" crlf)
            (bind ?x (iniPilihan))
            (
                if(cekoption ?x ) then
                (break)
                )
            )
        
        (
            if(eq ?x 0) then
            
            elif(eq ?x 1) then
            (tempGarage)
            (assert (showGarage))
            (run)
            (while TRUE
                (printout t "Which house to be updated[1.." ?*garcnt* " | 0 back to main menu]: " )
                (bind ?*modifidx* (read))
                (
                    if(or (<= ?*modifidx* ?*garcnt*) (>= ?*modifidx* 0)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input house type[Cottage | Light House | Skyscraper](CASE-SENSITIVE): ")
                (bind ?tipe (readline))
                (
                    if(eq ?tipe "Cottage") then
                    (break)
                    elif(eq ?tipe "Light House") then
                    (break)
                    elif(eq ?tipe "Skyscraper") then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input room number [1 - 5] : ")
                (bind ?room (read))
                (
                    if(and (> ?room 0) (< ?room 6)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input house price [1000 - 500000] : ")
                (bind ?price (read))
                (
                    if(and (> ?price 999) (< ?price 500001)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input location [West Jakarta | North Jakarta | South Jakarta](CASE-SENSITIVE): ")
                (bind ?loc (readline))
                (
                    if(cekLoc ?loc) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input garage number [1 - 5] : ")
                (bind ?gar (read))
                (
                    if(and (> ?gar 0) (< ?gar 6)) then
                    (break)
                    )
                )
            (bind ?*cnt* 0)
            (assert (modiftemp (tipe ?tipe) (room ?room) (price ?price) (loc ?loc) (tot ?gar)))
            (assert (modifgar))
            (run)
            elif(eq ?x 2) then
            (tempNoGarage)
            (assert (showNoGarage))
            (run)
            (while TRUE
                (printout t "Which house to be updated[1.." ?*nogarcnt* " | 0 back to main menu]: " )
                (bind ?*modifidx* (read))
                (
                    if(or (<= ?*modifidx* ?*nogarcnt*) (>= ?*modifidx* 0)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input house type[Cottage | Light House | Skyscraper](CASE-SENSITIVE): ")
                (bind ?tipe (readline))
                (
                    if(eq ?tipe "Cottage") then
                    (break)
                    elif(eq ?tipe "Light House") then
                    (break)
                    elif(eq ?tipe "Skyscraper") then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input room number [1 - 5] : ")
                (bind ?room (read))
                (
                    if(and (> ?room 0) (< ?room 6)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input house price [1000 - 500000] : ")
                (bind ?price (read))
                (
                    if(and (> ?price 999) (< ?price 500001)) then
                    (break)
                    )
                )
            (while TRUE
                (printout t "Input location [West Jakarta | North Jakarta | South Jakarta](CASE-SENSITIVE): ")
                (bind ?loc (readline))
                (
                    if(cekLoc ?loc) then
                    (break)
                    )
                )
            (bind ?*cnt* 0)
            (assert (modiftemp (tipe ?tipe) (room ?room) (price ?price) (loc ?loc)))
            (assert (modifnogar))
            (run)
            )
        
        elif (eq ?input 4) then
        ( while TRUE
            (printout t "Types of houses to be deleted" crlf)
            (printout t "=============================" crlf)
            (bind ?x (iniPilihan))
            (
                if(cekoption ?x ) then
                (break)
                )
            )
        
        (
            if(eq ?x 0) then
            
            elif(eq ?x 1) then
            (tempGarage)
            (assert (showGarage))
            (run)
            (while TRUE
                (printout t "Which house to be deleted[1.." ?*garcnt* " | 0 back to main menu]: " )
                (bind ?*deleteidx* (read))
                (
                    if(or (<= ?*deleteidx* ?*garcnt*) (>= ?*deleteidx* 0)) then
                    (break)
                    )
                )
            (bind ?*cnt* 0)
            (assert (deletegar))
            (run)
            
            elif(eq ?x 2) then
            (tempNoGarage)
            (assert (showNoGarage))
            (run)
            (while TRUE
                (printout t "Which house to be deleted[1.." ?*nogarcnt* " | 0 back to main menu]: " )
                (bind ?*deleteidx* (read))
                (
                    if(or (<= ?*deleteidx* ?*nogarcnt*) (>= ?*deleteidx* 0)) then
                    (break)
                    )
                )
            (bind ?*cnt* 0)
            (assert (deletenogar))
            (run)
            
            )
        
        elif (eq ?input 5) then
        (while TRUE
            (printout t "Input your name [3 - 20 characters length]: ")
            (bind ?nama (readline))
            (
                if (and (<= (str-length ?nama) 20 ) (>= (str-length ?nama) 3 )) then
                (break)
                )
            )
        
        (while TRUE
            (printout t "Input your gender [ Male | Female ](CASE-SENSITIVE): ")
            (bind ?gender (readline))
            (
                if(eq ?gender "Male") then
                (break)
                elif(eq ?gender "Female") then
                (break)
                )
            )
        
        (while TRUE
            (printout t "Input your house preference [ With Garage | Without Garage ](CASE-SENSITIVE): ")
            (bind ?gar (readline))
            (
                if(eq ?gar "With Garage") then
                (break)
                elif(eq ?gar "Without Garage") then
                (break)
                )
            )
        
        (while TRUE
            (printout t "Input your income [10000 - 500000] (dollars) : ")
            (bind ?income (read))
            (
                if (and (<= ?income 500000 ) (>= ?income 10000 )) then
                (break)
                )
            )
        
        (while TRUE
            (printout t "Input your work location [West Jakarta | North Jakarta | South Jakarta](CASE-SENSITIVE): ")
            (bind ?loc (readline))
            (
                if(cekLoc ?loc) then
                (break)
                )
            )
        
        (while TRUE
            (printout t "Input preferred house type[Cottage | Light House | Skyscraper](CASE-SENSITIVE): ")
            (bind ?tipe (readline))
            (
                if(eq ?tipe "Cottage") then
                (break)
                elif(eq ?tipe "Light House") then
                (break)
                elif(eq ?tipe "Skyscraper") then
                (break)
                )
            )
        (
            if(eq ?gar "With Garage") then
            	(while TRUE
                	(printout t "Input number of car you own  [1 - 5] (cars) : ")
                	(bind ?car (read))
                	(
                    	if (and (<= ?car 5 ) (>= ?car 1 )) then
                    	(break)
                    )
            	)
            	(assert (query (nama ?nama)(gender ?gender)(gar ?gar)(income ?income)(loc ?loc)(type ?tipe)(car ?car)))
            	(assert (calcgar))
            	(run)
            else
            	(assert (query (nama ?nama)(gender ?gender)(gar ?gar)(income ?income)(loc ?loc)(type ?tipe)))
            	(assert (calcnogar))
            	(run)
         )
        ; (facts)
        (new Template)
        (assert (deletequery))
        (run)
        elif (eq ?input 6) then
        (break)
    )
    (bind ?*cnt* 0)
    )
